/*
auth

auth

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TokenRequestOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TokenRequestOneOf1{}

// TokenRequestOneOf1 struct for TokenRequestOneOf1
type TokenRequestOneOf1 struct {
	GrantType string `json:"grant_type"`
	RefreshToken string `json:"refresh_token"`
}

type _TokenRequestOneOf1 TokenRequestOneOf1

// NewTokenRequestOneOf1 instantiates a new TokenRequestOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenRequestOneOf1(grantType string, refreshToken string) *TokenRequestOneOf1 {
	this := TokenRequestOneOf1{}
	this.GrantType = grantType
	this.RefreshToken = refreshToken
	return &this
}

// NewTokenRequestOneOf1WithDefaults instantiates a new TokenRequestOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenRequestOneOf1WithDefaults() *TokenRequestOneOf1 {
	this := TokenRequestOneOf1{}
	return &this
}

// GetGrantType returns the GrantType field value
func (o *TokenRequestOneOf1) GetGrantType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GrantType
}

// GetGrantTypeOk returns a tuple with the GrantType field value
// and a boolean to check if the value has been set.
func (o *TokenRequestOneOf1) GetGrantTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GrantType, true
}

// SetGrantType sets field value
func (o *TokenRequestOneOf1) SetGrantType(v string) {
	o.GrantType = v
}

// GetRefreshToken returns the RefreshToken field value
func (o *TokenRequestOneOf1) GetRefreshToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RefreshToken
}

// GetRefreshTokenOk returns a tuple with the RefreshToken field value
// and a boolean to check if the value has been set.
func (o *TokenRequestOneOf1) GetRefreshTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RefreshToken, true
}

// SetRefreshToken sets field value
func (o *TokenRequestOneOf1) SetRefreshToken(v string) {
	o.RefreshToken = v
}

func (o TokenRequestOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TokenRequestOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["grant_type"] = o.GrantType
	toSerialize["refresh_token"] = o.RefreshToken
	return toSerialize, nil
}

func (o *TokenRequestOneOf1) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"grant_type",
		"refresh_token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTokenRequestOneOf1 := _TokenRequestOneOf1{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTokenRequestOneOf1)

	if err != nil {
		return err
	}

	*o = TokenRequestOneOf1(varTokenRequestOneOf1)

	return err
}

type NullableTokenRequestOneOf1 struct {
	value *TokenRequestOneOf1
	isSet bool
}

func (v NullableTokenRequestOneOf1) Get() *TokenRequestOneOf1 {
	return v.value
}

func (v *NullableTokenRequestOneOf1) Set(val *TokenRequestOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenRequestOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenRequestOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenRequestOneOf1(val *TokenRequestOneOf1) *NullableTokenRequestOneOf1 {
	return &NullableTokenRequestOneOf1{value: val, isSet: true}
}

func (v NullableTokenRequestOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenRequestOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


