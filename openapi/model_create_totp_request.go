/*
auth

auth

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateTOTPRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTOTPRequest{}

// CreateTOTPRequest struct for CreateTOTPRequest
type CreateTOTPRequest struct {
	Algorithm NullableString `json:"algorithm,omitempty"`
	Digits NullableInt64 `json:"digits,omitempty"`
	Step NullableInt64 `json:"step,omitempty"`
}

// NewCreateTOTPRequest instantiates a new CreateTOTPRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTOTPRequest() *CreateTOTPRequest {
	this := CreateTOTPRequest{}
	return &this
}

// NewCreateTOTPRequestWithDefaults instantiates a new CreateTOTPRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTOTPRequestWithDefaults() *CreateTOTPRequest {
	this := CreateTOTPRequest{}
	return &this
}

// GetAlgorithm returns the Algorithm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateTOTPRequest) GetAlgorithm() string {
	if o == nil || IsNil(o.Algorithm.Get()) {
		var ret string
		return ret
	}
	return *o.Algorithm.Get()
}

// GetAlgorithmOk returns a tuple with the Algorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateTOTPRequest) GetAlgorithmOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Algorithm.Get(), o.Algorithm.IsSet()
}

// HasAlgorithm returns a boolean if a field has been set.
func (o *CreateTOTPRequest) HasAlgorithm() bool {
	if o != nil && o.Algorithm.IsSet() {
		return true
	}

	return false
}

// SetAlgorithm gets a reference to the given NullableString and assigns it to the Algorithm field.
func (o *CreateTOTPRequest) SetAlgorithm(v string) {
	o.Algorithm.Set(&v)
}
// SetAlgorithmNil sets the value for Algorithm to be an explicit nil
func (o *CreateTOTPRequest) SetAlgorithmNil() {
	o.Algorithm.Set(nil)
}

// UnsetAlgorithm ensures that no value is present for Algorithm, not even an explicit nil
func (o *CreateTOTPRequest) UnsetAlgorithm() {
	o.Algorithm.Unset()
}

// GetDigits returns the Digits field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateTOTPRequest) GetDigits() int64 {
	if o == nil || IsNil(o.Digits.Get()) {
		var ret int64
		return ret
	}
	return *o.Digits.Get()
}

// GetDigitsOk returns a tuple with the Digits field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateTOTPRequest) GetDigitsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Digits.Get(), o.Digits.IsSet()
}

// HasDigits returns a boolean if a field has been set.
func (o *CreateTOTPRequest) HasDigits() bool {
	if o != nil && o.Digits.IsSet() {
		return true
	}

	return false
}

// SetDigits gets a reference to the given NullableInt64 and assigns it to the Digits field.
func (o *CreateTOTPRequest) SetDigits(v int64) {
	o.Digits.Set(&v)
}
// SetDigitsNil sets the value for Digits to be an explicit nil
func (o *CreateTOTPRequest) SetDigitsNil() {
	o.Digits.Set(nil)
}

// UnsetDigits ensures that no value is present for Digits, not even an explicit nil
func (o *CreateTOTPRequest) UnsetDigits() {
	o.Digits.Unset()
}

// GetStep returns the Step field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateTOTPRequest) GetStep() int64 {
	if o == nil || IsNil(o.Step.Get()) {
		var ret int64
		return ret
	}
	return *o.Step.Get()
}

// GetStepOk returns a tuple with the Step field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateTOTPRequest) GetStepOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Step.Get(), o.Step.IsSet()
}

// HasStep returns a boolean if a field has been set.
func (o *CreateTOTPRequest) HasStep() bool {
	if o != nil && o.Step.IsSet() {
		return true
	}

	return false
}

// SetStep gets a reference to the given NullableInt64 and assigns it to the Step field.
func (o *CreateTOTPRequest) SetStep(v int64) {
	o.Step.Set(&v)
}
// SetStepNil sets the value for Step to be an explicit nil
func (o *CreateTOTPRequest) SetStepNil() {
	o.Step.Set(nil)
}

// UnsetStep ensures that no value is present for Step, not even an explicit nil
func (o *CreateTOTPRequest) UnsetStep() {
	o.Step.Unset()
}

func (o CreateTOTPRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTOTPRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Algorithm.IsSet() {
		toSerialize["algorithm"] = o.Algorithm.Get()
	}
	if o.Digits.IsSet() {
		toSerialize["digits"] = o.Digits.Get()
	}
	if o.Step.IsSet() {
		toSerialize["step"] = o.Step.Get()
	}
	return toSerialize, nil
}

type NullableCreateTOTPRequest struct {
	value *CreateTOTPRequest
	isSet bool
}

func (v NullableCreateTOTPRequest) Get() *CreateTOTPRequest {
	return v.value
}

func (v *NullableCreateTOTPRequest) Set(val *CreateTOTPRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTOTPRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTOTPRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTOTPRequest(val *CreateTOTPRequest) *NullableCreateTOTPRequest {
	return &NullableCreateTOTPRequest{value: val, isSet: true}
}

func (v NullableCreateTOTPRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTOTPRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


