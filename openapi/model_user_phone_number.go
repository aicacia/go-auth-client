/*
auth

auth

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the UserPhoneNumber type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserPhoneNumber{}

// UserPhoneNumber struct for UserPhoneNumber
type UserPhoneNumber struct {
	CreatedAt time.Time `json:"created_at"`
	Id int64 `json:"id"`
	PhoneNumber string `json:"phone_number"`
	Primary bool `json:"primary"`
	UpdatedAt time.Time `json:"updated_at"`
	Verified bool `json:"verified"`
}

type _UserPhoneNumber UserPhoneNumber

// NewUserPhoneNumber instantiates a new UserPhoneNumber object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserPhoneNumber(createdAt time.Time, id int64, phoneNumber string, primary bool, updatedAt time.Time, verified bool) *UserPhoneNumber {
	this := UserPhoneNumber{}
	this.CreatedAt = createdAt
	this.Id = id
	this.PhoneNumber = phoneNumber
	this.Primary = primary
	this.UpdatedAt = updatedAt
	this.Verified = verified
	return &this
}

// NewUserPhoneNumberWithDefaults instantiates a new UserPhoneNumber object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserPhoneNumberWithDefaults() *UserPhoneNumber {
	this := UserPhoneNumber{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *UserPhoneNumber) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *UserPhoneNumber) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *UserPhoneNumber) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetId returns the Id field value
func (o *UserPhoneNumber) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *UserPhoneNumber) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *UserPhoneNumber) SetId(v int64) {
	o.Id = v
}

// GetPhoneNumber returns the PhoneNumber field value
func (o *UserPhoneNumber) GetPhoneNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value
// and a boolean to check if the value has been set.
func (o *UserPhoneNumber) GetPhoneNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PhoneNumber, true
}

// SetPhoneNumber sets field value
func (o *UserPhoneNumber) SetPhoneNumber(v string) {
	o.PhoneNumber = v
}

// GetPrimary returns the Primary field value
func (o *UserPhoneNumber) GetPrimary() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Primary
}

// GetPrimaryOk returns a tuple with the Primary field value
// and a boolean to check if the value has been set.
func (o *UserPhoneNumber) GetPrimaryOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Primary, true
}

// SetPrimary sets field value
func (o *UserPhoneNumber) SetPrimary(v bool) {
	o.Primary = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *UserPhoneNumber) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *UserPhoneNumber) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *UserPhoneNumber) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetVerified returns the Verified field value
func (o *UserPhoneNumber) GetVerified() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Verified
}

// GetVerifiedOk returns a tuple with the Verified field value
// and a boolean to check if the value has been set.
func (o *UserPhoneNumber) GetVerifiedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Verified, true
}

// SetVerified sets field value
func (o *UserPhoneNumber) SetVerified(v bool) {
	o.Verified = v
}

func (o UserPhoneNumber) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserPhoneNumber) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["id"] = o.Id
	toSerialize["phone_number"] = o.PhoneNumber
	toSerialize["primary"] = o.Primary
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["verified"] = o.Verified
	return toSerialize, nil
}

func (o *UserPhoneNumber) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created_at",
		"id",
		"phone_number",
		"primary",
		"updated_at",
		"verified",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUserPhoneNumber := _UserPhoneNumber{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUserPhoneNumber)

	if err != nil {
		return err
	}

	*o = UserPhoneNumber(varUserPhoneNumber)

	return err
}

type NullableUserPhoneNumber struct {
	value *UserPhoneNumber
	isSet bool
}

func (v NullableUserPhoneNumber) Get() *UserPhoneNumber {
	return v.value
}

func (v *NullableUserPhoneNumber) Set(val *UserPhoneNumber) {
	v.value = val
	v.isSet = true
}

func (v NullableUserPhoneNumber) IsSet() bool {
	return v.isSet
}

func (v *NullableUserPhoneNumber) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserPhoneNumber(val *UserPhoneNumber) *NullableUserPhoneNumber {
	return &NullableUserPhoneNumber{value: val, isSet: true}
}

func (v NullableUserPhoneNumber) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserPhoneNumber) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


